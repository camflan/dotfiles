# ENV
# loaded from .zshenv

# aliases
alias oh="open ."
alias ls="eza --long --grid --header --classify --all --group-directories-first --git"
alias lsv="/bin/ls"
alias ll="ls -lahL"

alias fg1="fg %1"
alias fg2="fg %2"
alias fg3="fg %3"

alias dc="docker compose"

alias w="walk"

# bat supports paging, syntax highlighting, searching, etc
alias cat="bat"

setopt inc_append_history
setopt share_history
setopt bang_hist
setopt hist_verify

setopt autopushd pushdminus pushdsilent pushdtohome
setopt autocd
setopt cdable_vars

setopt complete_in_word
setopt list_ambiguous
setopt glob_complete
setopt rec_exact

setopt bad_pattern
setopt equals
setopt extended_glob
setopt glob_dots

setopt noclobber
setopt correct

# homebrew
BREW_DIR=/opt/homebrew
BREW_CMD="$BREW_DIR/bin/brew"
eval "$($BREW_DIR/bin/brew shellenv)"

export CFLAGS="-I$BREW_DIR/include"
export LDFLAGS="-L$BREW_DIR/lib"

# https://asdf-vm.com/#/core-manage-asdf
. $HOME/.asdf/asdf.sh

# append completions to fpath
fpath=(${ASDF_DIR}/completions $fpath)

# rust
. "$(asdf where rust)/env"

# FASD
# Quick jump to directories/etc
# aliased to z and zz
eval "$(fasd --init auto)"

# prompt
eval "$(starship init zsh)"

# cache the compdump once per day
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C


# Source autocompletions for ZSH
for cf in $CBFDOTFILES_DIR/config/zsh/completions/*.zsh_completion;
    do source $cf;
done

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
 source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
else
 echo "[ERROR] zprezto not installed!"
fi

# To profile zsh bootup
# zmodload zsh/zprof # top of your .zshrc file
# zprof # keep at the end

# Added by Docker Desktop
if [[ -s "${ZDOTDIR:-$HOME}/.docker/init-zsh.sh" ]]; then
    source $HOME/.docker/init-zsh.sh || true
fi


# atuin (shell history)
# https://atuin.sh/
# https://github.com/ellie/atuin
#
# Don't let atuin auto-bind to up and ctrl-r
# The current full UI "up" implementation is too bloated and incongruous
export ATUIN_NOBIND="true"
eval "$(atuin init zsh)"
# ctrl+r for full atuin view
bindkey '^r' _atuin_search_widget

# PKGX integration
eval "$(pkgx --shellcode)"  #docs.pkgx.sh/shellcode

# direnv
eval "$(direnv hook zsh)"
